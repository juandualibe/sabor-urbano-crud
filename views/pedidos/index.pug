extends ../layout

block content
  - var page = 'pedidos'
  
  .row.mb-4
    .col-12
      .d-flex.justify-content-between.align-items-center
        h1.display-6
          i.fas.fa-shopping-bag.text-info.me-3
          | Gestión de Pedidos
        a.btn.btn-info(href="/pedidos/nuevo")
          i.fas.fa-plus.me-2
          | Nuevo Pedido

  if pedidos && pedidos.length > 0
    .row
      .col-12
        .card
          .card-header.bg-dark.text-white
            h5.mb-0
              i.fas.fa-shopping-bag.me-2
              | Lista de Pedidos (#{pedidos.length})
          .card-body.p-0
            .table-responsive
              table.table.table-hover.mb-0
                thead.table-light
                  tr
                    th ID
                    th Cliente
                    th Total
                    th Tipo
                    th Plataforma
                    th Estado
                    th Fecha Creación
                    th Acciones
                tbody
                  each pedido in pedidos
                    tr
                      td= pedido.id
                      td= pedido.cliente
                      td $#{pedido.total}
                      td
                        span.badge(class= pedido.tipo === 'presencial' ? 'bg-info' : 'bg-primary')= pedido.tipo
                      td
                        span.badge(class= pedido.plataforma === 'rappi' ? 'bg-danger' : pedido.plataforma === 'pedidosya' ? 'bg-warning' : pedido.plataforma === 'propia' ? 'bg-success' : 'bg-dark')= pedido.plataforma
                      td
                        span.badge(class= pedido.estado === 'pendiente' ? 'bg-warning' : pedido.estado === 'en_preparacion' ? 'bg-primary' : pedido.estado === 'listo' ? 'bg-info' : pedido.estado === 'en_camino' ? 'bg-warning' : pedido.estado === 'entregado' ? 'bg-success' : 'bg-dark')= pedido.estado
                      td
                        small= new Date(pedido.fechaCreacion).toLocaleDateString('es-AR')
                      td
                        .btn-group(role="group")
                          a.btn.btn-sm.btn-outline-primary(href=`/api/pedidos/${pedido.id}`, target="_blank", title="Ver")
                            i.fas.fa-eye
                          a.btn.btn-sm.btn-outline-warning(href=`/pedidos/editar/${pedido.id}`, title="Editar")
                            i.fas.fa-edit
                          button.btn.btn-sm.btn-outline-danger(data-id=pedido.id, onclick="eliminarPedido(this)", title="Eliminar")
                            i.fas.fa-trash
    script.
      async function eliminarPedido(button) {
        if (confirm('¿Estás seguro de eliminar este pedido?')) {
          const id = button.getAttribute('data-id');
          try {
            const response = await fetch(`/api/pedidos/${id}`, { method: 'DELETE' });
            const result = await response.json();
            if (result.success) {
              alert('Pedido eliminado exitosamente');
              location.reload();
            } else {
              alert(`Error: ${result.message}`);
            }
          } catch (error) {
            alert('Error al eliminar el pedido');
          }
        }
      }
  else
    .row
      .col-12
        .card
          .card-body.text-center.py-5
            i.fas.fa-shopping-bag.text-muted.mb-3(style="font-size: 4rem;")
            h4.text-muted No hay pedidos registrados
            p.text-muted Registra el primer pedido para comenzar
            a.btn.btn-info(href="/pedidos/nuevo")
              i.fas.fa-plus.me-2
              | Registrar Primer Pedido